/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        //classpath "net.ltgt.gradle:gradle-apt-plugin:0.21"
        classpath "name.remal:gradle-plugins:1.5.0"
    }
}

plugins {
    id 'java'
    id "name.remal.apt" version "1.5.0"
}

apply plugin: "name.remal.apt"
apply plugin: 'java'

dependencies {


    annotationProcessor project(":annotation-apt")
    implementation project(":annotation-apt")
}


println 'This is executed during the config phase in root build.gradle file'



allprojects {


    repositories {
        // Use jcenter for resolving dependencies.
        // You can declare any Maven/Ivy/file repository here.
        // jcenter()
        mavenCentral()
    }


    afterEvaluate { project ->
        if (project.hasTest) {
            println("Add test task to $project");
            project.task('addTest') {
                println("Running test task for $project");
            }
        }

    }
}


//application {
//    // Define the main class for the application.
//    mainClassName = 'java.App'
//}

tasks.register('configured') {
    println 'This is also executed during the configuration phase, because :configured is used in the build.'
}
tasks.register('test2') {

    doLast {
        println 'This is executed during the execution phase.'
    }
}
tasks.register('testBoth') {
    doFirst {
        println 'This is executed first during the execution phase.'
    }
    doLast {
        println 'This is executed last during the execution phase.'
    }
    println 'This is executed during the configuration phase as well, because :testBoth is used in the build.'
}

//test {
//    // Use junit platform for unit tests
//    useJUnitPlatform()
//}

println 'This is end of the config phase in root build.gradle file'
